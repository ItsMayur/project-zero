// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id              Int               @id @default(autoincrement())
  username        String            @unique @db.VarChar(255)
  email           String            @unique
  first_name      String
  last_name       String?
  password_hash   String
  bio             String
  profile_pic     String
  role            String
  created_at      DateTime          @default(now())
  updated_at      DateTime          @updatedAt
  product         product[]
  productwishlist productwishlist[]
  productreviews  productreviews[]
  coursewishlist  coursewishlist[]
  coursereview    coursereview[]
}

model product {
  id                 Int               @id @default(autoincrement())
  seller             user              @relation(fields: [seller_id], references: [id])
  seller_id          Int
  title              String
  discription        String
  price              Int
  quantity_available Int
  categories         Json
  images             Json
  created_at         DateTime          @default(now())
  updated_at         DateTime          @updatedAt
  productwishlist    productwishlist[]
  productreviews     productreviews[]
}

model productwishlist {
  product    product @relation(fields: [product_id], references: [id])
  product_id Int
  user       user    @relation(fields: [user_id], references: [id])
  user_id    Int
  quantity   Int

  @@id([product_id, user_id])
}

model productreviews {
  user          user     @relation(fields: [user_id], references: [id])
  user_id       Int
  product       product  @relation(fields: [reviewable_id], references: [id])
  reviewable_id Int
  quality       Int
  value         Int
  service       Int
  packaging     Int
  comment       String
  created_at    DateTime @default(now())

  @@id([user_id, reviewable_id])
}

model courses {
  id               Int              @id @default(autoincrement())
  instructure_id   Int
  course_thumbnail String
  title            String
  discription      String
  price            Int
  level            String
  categories       Json
  lessons          Json
  created_at       DateTime         @default(now())
  updated_at       DateTime         @updatedAt
  coursewishlist   coursewishlist[]
  coursereview     coursereview[]
}

model coursewishlist {
  course    courses @relation(fields: [course_id], references: [id])
  course_id Int
  user      user    @relation(fields: [user_id], references: [id])
  user_id   Int

  @@id([course_id, user_id])
}

model coursereview {
  user         user    @relation(fields: [user_id], references: [id])
  user_id      Int
  course       courses @relation(fields: [course_id], references: [id])
  course_id    Int
  content      Int
  presentation Int
  platform     Int

  comment    String
  created_at DateTime @default(now())

  @@id([user_id, course_id])
}
